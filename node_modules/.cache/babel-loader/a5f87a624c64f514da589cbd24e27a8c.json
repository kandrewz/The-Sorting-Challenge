{"ast":null,"code":"import _classCallCheck from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Andrew/Documents/programming/sustainla-master/src/Item.js\";\nimport React, { Component } from 'react';\nimport Draggable from 'react-draggable'; // import PlasticCup from './itemimages/PlasticCup.jpg';\n// import Burger from './itemimages/Burger.jpg';\n// import Pencil from './itemimages/Pencil.jpg';\n// import ScratchPaper from './itemimages/ScratchPaper.jpg';\n// import Flyer from './itemimages/Flyer.jpg';\n// import SodaCan from './itemimages/SodaCan.jpg';\n// import Pizza from './itemimages/Pizza.jpg';\n// import Napkin from './itemimages/Napkin.jpg';\n// import PopcornBox from './itemimages/PopcornBox.jpg';\n// import RubberBand from './itemimages/RubberBand.jpg';\n// import Styrofoam from './itemimages/Styrofoam.jpg';\n// import Floss from './itemimages/Floss.jpg';\n// import Newspaper from './itemimages/Newspaper.jpg';\n// import Flower from './itemimages/Flower.jpg';\n// import ChipBag from './itemimages/ChipBag.jpg';\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this, props));\n\n    _this.handleStop = function (e, data) {\n      _this.props.incNumTries();\n\n      var bin = \"\".concat(_this.props.bin, \"bin\");\n      var itemnumber = \"item\".concat(_this.props.itemnumber);\n      var itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n      var binRect = document.getElementById(bin).getBoundingClientRect();\n\n      if (rect1.right > rect2.left && rect2.top < rect1.bottom && rect1.bottom > rect2.top && rect1.left < rect2.right) {\n        _this.props.incSucTries();\n\n        if (_this.props.bin === 'recycling') {\n          _this.changeBinColor('recyclingbin', 'green');\n\n          _this.changeBinColor('compostbin', 'white');\n\n          _this.changeBinColor('landfillbin', 'white');\n        } else if (_this.props.bin === 'compost') {\n          _this.changeBinColor('compostbin', 'green');\n\n          _this.changeBinColor('recyclingbin', 'white');\n\n          _this.changeBinColor('landfillbin', 'white');\n        } else if (_this.props.bin === 'landfill') {\n          _this.changeBinColor('landfillbin', 'green');\n\n          _this.changeBinColor('compostbin', 'white');\n\n          _this.changeBinColor('recyclingbin', 'white');\n        }\n\n        _this.setOverlapsBin();\n      } else {\n        _this.changeBinColor('landfillbin', 'red');\n\n        _this.changeBinColor('compostbin', 'red');\n\n        _this.changeBinColor('recyclingbin', 'red');\n      }\n      /*console.log(\"x: \" + data.x);\n      console.log(\"y: \" + data.y); */\n\n    };\n\n    _this.handleDrag = function (e, data) {\n      var x = data.x,\n          y = data.y;\n\n      _this.setState({\n        position: {\n          x: x,\n          y: y\n        }\n      });\n\n      _this.changeBinColor('landfillbin', 'white');\n\n      _this.changeBinColor('compostbin', 'white');\n\n      _this.changeBinColor('recyclingbin', 'white');\n    };\n\n    _this.eventLogger = function (e, data) {\n      console.log('Event: ', e);\n      console.log('Data', data);\n    };\n\n    _this.getImage = function () {\n      // let x = this.props.itemtype;\n      return require(\"./itemimages/\".concat(_this.props.itemtype, \".png\")); // if (x === 'PlasticCup')\n      //   return PlasticCup;\n      // else if (x === 'Burger')\n      //   return Burger;\n      // else if (x === 'Pencil')\n      //   return Pencil;\n      // else if (x === 'ScratchPaper')\n      //   return ScratchPaper;\n      // else if (x === 'Flyer')\n      //   return Flyer;\n      // else if (x === 'SodaCan')\n      //   return SodaCan;\n      // else if (x === 'Pizza')\n      //   return Pizza;\n      // else if (x === 'PopcornBox')\n      //   return PopcornBox;\n      // else if (x === 'Napkin')\n      //   return Napkin;\n      // else if (x === 'RubberBand')\n      //   return RubberBand;\n      // else if (x === 'Styrofoam')\n      //   return Styrofoam;\n      // else if (x === 'Flower')\n      //   return Flower;\n      // else if (x === 'Newspaper')\n      //   return Newspaper;\n      // else if (x === 'Floss')\n      //   return Floss;\n      // else if (x == 'ChipBag')\n      //   return ChipBag;\n    };\n\n    _this.state = {\n      position: {\n        x: 0,\n        y: 0\n      },\n      overlapsBin: false\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"changeBinColor\",\n    value: function changeBinColor(binID, color) {\n      document.getElementById(binID).style.borderColor = color;\n    }\n  }, {\n    key: \"setOverlapsBin\",\n    value: function setOverlapsBin() {\n      this.setState({\n        overlapsBin: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var image = this.getImage();\n      var item;\n\n      if (this.state.overlapsBin == false) {\n        item = React.createElement(Draggable, {\n          axis: \"both\",\n          handle: \".item\",\n          defaultPosition: null,\n          position: this.state.position,\n          scale: 1,\n          onStart: this.handleStart,\n          onDrag: this.handleDrag,\n          onStop: this.handleStop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"item\",\n          id: \"item\".concat(this.props.itemnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, this.props.itemtype), React.createElement(\"img\", {\n          className: \"pic\",\n          draggable: \"false\",\n          src: image,\n          alt: this.props.itemtype,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, item);\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default Item;","map":{"version":3,"sources":["/Users/Andrew/Documents/programming/sustainla-master/src/Item.js"],"names":["React","Component","Draggable","Item","props","handleStop","e","data","incNumTries","bin","itemnumber","itemRect","document","getElementById","getBoundingClientRect","binRect","rect1","right","rect2","left","top","bottom","incSucTries","changeBinColor","setOverlapsBin","handleDrag","x","y","setState","position","eventLogger","console","log","getImage","require","itemtype","state","overlapsBin","binID","color","style","borderColor","image","item","handleStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n// import PlasticCup from './itemimages/PlasticCup.jpg';\n// import Burger from './itemimages/Burger.jpg';\n// import Pencil from './itemimages/Pencil.jpg';\n// import ScratchPaper from './itemimages/ScratchPaper.jpg';\n// import Flyer from './itemimages/Flyer.jpg';\n// import SodaCan from './itemimages/SodaCan.jpg';\n// import Pizza from './itemimages/Pizza.jpg';\n// import Napkin from './itemimages/Napkin.jpg';\n// import PopcornBox from './itemimages/PopcornBox.jpg';\n// import RubberBand from './itemimages/RubberBand.jpg';\n// import Styrofoam from './itemimages/Styrofoam.jpg';\n// import Floss from './itemimages/Floss.jpg';\n// import Newspaper from './itemimages/Newspaper.jpg';\n// import Flower from './itemimages/Flower.jpg';\n// import ChipBag from './itemimages/ChipBag.jpg';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: {\n        x: 0, y: 0\n      },\n      overlapsBin: false\n    };\n  }\n\n  changeBinColor(binID, color) {\n    document.getElementById(binID).style.borderColor = color;\n  }\n  setOverlapsBin() {\n    this.setState({ overlapsBin: true });\n  }\n\n  handleStop = (e, data) => {\n    this.props.incNumTries();\n    let bin = `${this.props.bin}bin`;\n    let itemnumber = `item${this.props.itemnumber}`;\n    let itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n    let binRect = document.getElementById(bin).getBoundingClientRect();\n    if (rect1.right > rect2.left && rect2.top < rect1.bottom && rect1.bottom > rect2.top && rect1.left < rect2.right) {\n      this.props.incSucTries();\n      if (this.props.bin === 'recycling') {\n        this.changeBinColor('recyclingbin', 'green');\n        this.changeBinColor('compostbin', 'white');\n        this.changeBinColor('landfillbin', 'white');\n      }\n      else if (this.props.bin === 'compost') {\n        this.changeBinColor('compostbin', 'green');\n        this.changeBinColor('recyclingbin', 'white');\n        this.changeBinColor('landfillbin', 'white');\n      }\n      else if (this.props.bin === 'landfill') {\n        this.changeBinColor('landfillbin', 'green');\n        this.changeBinColor('compostbin', 'white');\n        this.changeBinColor('recyclingbin', 'white');\n      }\n      this.setOverlapsBin();\n    }\n    else {\n      this.changeBinColor('landfillbin', 'red');\n      this.changeBinColor('compostbin', 'red');\n      this.changeBinColor('recyclingbin', 'red');\n    }\n    /*console.log(\"x: \" + data.x);\nconsole.log(\"y: \" + data.y); */\n  }\n  handleDrag = (e, data) => {\n    const { x, y } = data;\n    this.setState({\n      position: { x: x, y: y }\n    });\n    this.changeBinColor('landfillbin', 'white');\n    this.changeBinColor('compostbin', 'white');\n    this.changeBinColor('recyclingbin', 'white');\n  }\n\n  eventLogger = (e: MouseEvent, data: Object) => {\n    console.log('Event: ', e);\n    console.log('Data', data);\n  }\n\n  getImage = () => {\n    // let x = this.props.itemtype;\n    return require(`./itemimages/${this.props.itemtype}.png`);\n    // if (x === 'PlasticCup')\n    //   return PlasticCup;\n    // else if (x === 'Burger')\n    //   return Burger;\n    // else if (x === 'Pencil')\n    //   return Pencil;\n    // else if (x === 'ScratchPaper')\n    //   return ScratchPaper;\n    // else if (x === 'Flyer')\n    //   return Flyer;\n    // else if (x === 'SodaCan')\n    //   return SodaCan;\n    // else if (x === 'Pizza')\n    //   return Pizza;\n    // else if (x === 'PopcornBox')\n    //   return PopcornBox;\n    // else if (x === 'Napkin')\n    //   return Napkin;\n    // else if (x === 'RubberBand')\n    //   return RubberBand;\n    // else if (x === 'Styrofoam')\n    //   return Styrofoam;\n    // else if (x === 'Flower')\n    //   return Flower;\n    // else if (x === 'Newspaper')\n    //   return Newspaper;\n    // else if (x === 'Floss')\n    //   return Floss;\n    // else if (x == 'ChipBag')\n    //   return ChipBag;\n  }\n  render() {\n    let image = this.getImage();\n    let item;\n    if (this.state.overlapsBin == false) {\n      item = <Draggable\n        axis=\"both\"\n        handle=\".item\"\n        defaultPosition={null}\n        position={this.state.position}\n        scale={1}\n        onStart={this.handleStart}\n        onDrag={this.handleDrag}\n        onStop={this.handleStop}>\n        <div className=\"item\" id={`item${this.props.itemnumber}`}>\n          <p>{this.props.itemtype}</p>\n          <img className=\"pic\" draggable=\"false\" src={image} alt={this.props.itemtype} />\n        </div>\n      </Draggable>\n    }\n    return (\n      <div>\n        {item}\n      </div>\n    );\n  }\n}\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}