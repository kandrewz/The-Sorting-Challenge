{"ast":null,"code":"import _classCallCheck from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Andrew/Documents/programming/sustainla-master/src/Item.js\";\nimport React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this, props));\n\n    _this.handleStop = function (e, data) {\n      if (_this.overlapsAnyBin()) {\n        _this.props.incNumTries(_this.props.itemnumber);\n\n        var bin = \"\".concat(_this.props.bin, \"bin\");\n        var itemnumber = \"item\".concat(_this.props.itemnumber);\n        var itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n        var binRect = document.getElementById(bin).getBoundingClientRect();\n\n        if (itemRect.right > binRect.left && itemRect.top < binRect.bottom && itemRect.bottom > binRect.top && itemRect.left < binRect.right) {\n          _this.props.incSucTries();\n\n          if (_this.props.bin === \"recycling\") {\n            _this.changeBinColor(\"recyclingbin\", \"green\");\n\n            _this.changeBinColor(\"compostbin\", \"white\");\n\n            _this.changeBinColor(\"landfillbin\", \"white\");\n          } else if (_this.props.bin === \"compost\") {\n            _this.changeBinColor(\"compostbin\", \"green\");\n\n            _this.changeBinColor(\"recyclingbin\", \"white\");\n\n            _this.changeBinColor(\"landfillbin\", \"white\");\n          } else if (_this.props.bin === \"landfill\") {\n            _this.changeBinColor(\"landfillbin\", \"green\");\n\n            _this.changeBinColor(\"compostbin\", \"white\");\n\n            _this.changeBinColor(\"recyclingbin\", \"white\");\n          }\n\n          _this.setOverlapsBin();\n        } else {\n          _this.changeBinColor(\"landfillbin\", \"red\");\n\n          _this.changeBinColor(\"compostbin\", \"red\");\n\n          _this.changeBinColor(\"recyclingbin\", \"red\");\n        }\n      }\n      /*console.log(\"x: \" + data.x);\n      console.log(\"y: \" + data.y); */\n\n    };\n\n    _this.handleDrag = function (e, data) {\n      var x = data.x,\n          y = data.y;\n\n      _this.setState({\n        position: {\n          x: x,\n          y: y\n        }\n      });\n\n      _this.changeBinColor(\"landfillbin\", \"white\");\n\n      _this.changeBinColor(\"compostbin\", \"white\");\n\n      _this.changeBinColor(\"recyclingbin\", \"white\");\n    };\n\n    _this.getImage = function () {\n      // let x = this.props.itemtype;\n      return require(\"./itemimages/\".concat(_this.props.itemtype, \".png\"));\n    };\n\n    _this.state = {\n      position: {\n        x: 0,\n        y: 0\n      },\n      overlapsBin: false\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"changeBinColor\",\n    value: function changeBinColor(binID, color) {\n      document.getElementById(binID).style.borderColor = color;\n    }\n  }, {\n    key: \"setOverlapsBin\",\n    value: function setOverlapsBin() {\n      this.setState({\n        overlapsBin: true\n      });\n    }\n  }, {\n    key: \"overlapsAnyBin\",\n    value: function overlapsAnyBin() {\n      var itemnumber = \"item\".concat(this.props.itemnumber);\n      var itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n      var compostRect = document.getElementById(\"compostbin\").getBoundingClientRect();\n\n      if (itemRect.right > compostRect.left && itemRect.top < compostRect.bottom && itemRect.bottom > compostRect.top && itemRect.left < compostRect.right) {\n        return true;\n      }\n\n      var recyclingRect = document.getElementById(\"recyclingbin\").getBoundingClientRect();\n      var landfillRect = document.getElementById(\"landfillbin\").getBoundingClientRect();\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var image = this.getImage();\n      var item;\n\n      if (this.state.overlapsBin === false) {\n        item = React.createElement(Draggable, {\n          axis: \"both\",\n          handle: \".item\",\n          defaultPosition: null,\n          position: this.state.position,\n          scale: 1,\n          onStart: this.handleStart,\n          onDrag: this.handleDrag,\n          onStop: this.handleStop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"item\",\n          id: \"item\".concat(this.props.itemnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, this.props.itemtype), React.createElement(\"img\", {\n          className: \"pic\",\n          draggable: \"false\",\n          src: image,\n          alt: this.props.itemtype,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, item);\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default Item;","map":{"version":3,"sources":["/Users/Andrew/Documents/programming/sustainla-master/src/Item.js"],"names":["React","Component","Draggable","Item","props","handleStop","e","data","overlapsAnyBin","incNumTries","itemnumber","bin","itemRect","document","getElementById","getBoundingClientRect","binRect","right","left","top","bottom","incSucTries","changeBinColor","setOverlapsBin","handleDrag","x","y","setState","position","getImage","require","itemtype","state","overlapsBin","binID","color","style","borderColor","compostRect","recyclingRect","landfillRect","image","item","handleStart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: {\n        x: 0,\n        y: 0\n      },\n      overlapsBin: false\n    };\n  }\n\n  changeBinColor(binID, color) {\n    document.getElementById(binID).style.borderColor = color;\n  }\n  setOverlapsBin() {\n    this.setState({ overlapsBin: true });\n  }\n\n  overlapsAnyBin() {\n    let itemnumber = `item${this.props.itemnumber}`;\n    let itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n    let compostRect = document\n      .getElementById(\"compostbin\")\n      .getBoundingClientRect();\n    if (\n      itemRect.right > compostRect.left &&\n      itemRect.top < compostRect.bottom &&\n      itemRect.bottom > compostRect.top &&\n      itemRect.left < compostRect.right\n    ) {\n      return true;\n    }\n    let recyclingRect = document\n      .getElementById(\"recyclingbin\")\n      .getBoundingClientRect();\n    let landfillRect = document\n      .getElementById(\"landfillbin\")\n      .getBoundingClientRect();\n\n    return true;\n  }\n  handleStop = (e, data) => {\n    if (this.overlapsAnyBin()) {\n      this.props.incNumTries(this.props.itemnumber);\n      let bin = `${this.props.bin}bin`;\n      let itemnumber = `item${this.props.itemnumber}`;\n      let itemRect = document\n        .getElementById(itemnumber)\n        .getBoundingClientRect();\n      let binRect = document.getElementById(bin).getBoundingClientRect();\n      if (\n        itemRect.right > binRect.left &&\n        itemRect.top < binRect.bottom &&\n        itemRect.bottom > binRect.top &&\n        itemRect.left < binRect.right\n      ) {\n        this.props.incSucTries();\n        if (this.props.bin === \"recycling\") {\n          this.changeBinColor(\"recyclingbin\", \"green\");\n          this.changeBinColor(\"compostbin\", \"white\");\n          this.changeBinColor(\"landfillbin\", \"white\");\n        } else if (this.props.bin === \"compost\") {\n          this.changeBinColor(\"compostbin\", \"green\");\n          this.changeBinColor(\"recyclingbin\", \"white\");\n          this.changeBinColor(\"landfillbin\", \"white\");\n        } else if (this.props.bin === \"landfill\") {\n          this.changeBinColor(\"landfillbin\", \"green\");\n          this.changeBinColor(\"compostbin\", \"white\");\n          this.changeBinColor(\"recyclingbin\", \"white\");\n        }\n        this.setOverlapsBin();\n      } else {\n        this.changeBinColor(\"landfillbin\", \"red\");\n        this.changeBinColor(\"compostbin\", \"red\");\n        this.changeBinColor(\"recyclingbin\", \"red\");\n      }\n    }\n    /*console.log(\"x: \" + data.x);\nconsole.log(\"y: \" + data.y); */\n  };\n  handleDrag = (e, data) => {\n    const { x, y } = data;\n    this.setState({\n      position: { x: x, y: y }\n    });\n    this.changeBinColor(\"landfillbin\", \"white\");\n    this.changeBinColor(\"compostbin\", \"white\");\n    this.changeBinColor(\"recyclingbin\", \"white\");\n  };\n\n  getImage = () => {\n    // let x = this.props.itemtype;\n    return require(`./itemimages/${this.props.itemtype}.png`);\n  };\n\n  render() {\n    let image = this.getImage();\n    let item;\n    if (this.state.overlapsBin === false) {\n      item = (\n        <Draggable\n          axis=\"both\"\n          handle=\".item\"\n          defaultPosition={null}\n          position={this.state.position}\n          scale={1}\n          onStart={this.handleStart}\n          onDrag={this.handleDrag}\n          onStop={this.handleStop}\n        >\n          <div className=\"item\" id={`item${this.props.itemnumber}`}>\n            <p>{this.props.itemtype}</p>\n            <img\n              className=\"pic\"\n              draggable=\"false\"\n              src={image}\n              alt={this.props.itemtype}\n            />\n          </div>\n        </Draggable>\n      );\n    }\n    return <div>{item}</div>;\n  }\n}\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}