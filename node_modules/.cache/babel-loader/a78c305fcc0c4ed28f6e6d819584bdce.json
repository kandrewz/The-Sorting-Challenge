{"ast":null,"code":"import _classCallCheck from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Andrew/Documents/programming/sustainla-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Andrew/Documents/programming/sustainla-master/src/Item.js\";\nimport React, { Component } from 'react';\nimport Draggable from 'react-draggable'; // import PlasticCup from './itemimages/PlasticCup.jpg';\n// import Burger from './itemimages/Burger.jpg';\n// import Pencil from './itemimages/Pencil.jpg';\n// import ScratchPaper from './itemimages/ScratchPaper.jpg';\n// import Flyer from './itemimages/Flyer.jpg';\n// import SodaCan from './itemimages/SodaCan.jpg';\n// import Pizza from './itemimages/Pizza.jpg';\n// import Napkin from './itemimages/Napkin.jpg';\n// import PopcornBox from './itemimages/PopcornBox.jpg';\n// import RubberBand from './itemimages/RubberBand.jpg';\n// import Styrofoam from './itemimages/Styrofoam.jpg';\n// import Floss from './itemimages/Floss.jpg';\n// import Newspaper from './itemimages/Newspaper.jpg';\n// import Flower from './itemimages/Flower.jpg';\n// import ChipBag from './itemimages/ChipBag.jpg';\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this, props));\n\n    _this.handleStop = function (e, data) {\n      _this.props.incNumTries();\n\n      var bin;\n\n      if (_this.props.bin === 'recycling') {\n        bin = 'recyclingbin';\n      } else if (_this.props.bin === 'compost') {\n        bin = 'compostbin';\n      } else if (_this.props.bin === 'landfill') {\n        bin = 'landfillbin';\n      }\n\n      var itemnumber = 'item' + _this.props.itemnumber;\n      var rect1 = document.getElementById(itemnumber).getBoundingClientRect();\n      var rect2 = document.getElementById(bin).getBoundingClientRect();\n\n      if (rect1.right > rect2.left && rect2.top < rect1.bottom && rect1.bottom > rect2.top && rect1.left < rect2.right) {\n        _this.props.incSucTries();\n\n        if (_this.props.bin === 'recycling') {\n          _this.changeBinGreen('recyclingbin');\n\n          _this.changeBinWhite('compostbin');\n\n          _this.changeBinWhite('landfillbin');\n        } else if (_this.props.bin === 'compost') {\n          _this.changeBinGreen('compostbin');\n\n          _this.changeBinWhite('recyclingbin');\n\n          _this.changeBinWhite('landfillbin');\n        } else if (_this.props.bin === 'landfill') {\n          _this.changeBinGreen('landfillbin');\n\n          _this.changeBinWhite('compostbin');\n\n          _this.changeBinWhite('recyclingbin');\n        }\n      } else {\n        if (_this.props.bin === 'recycling') {\n          _this.changeBinRed('recyclingbin');\n\n          _this.changeBinRed('compostbin');\n\n          _this.changeBinRed('landfillbin');\n        } else if (_this.props.bin === 'compost') {\n          _this.changeBinRed('compostbin');\n\n          _this.changeBinRed('recyclingbin');\n\n          _this.changeBinRed('landfillbin');\n        } else if (_this.props.bin === 'landfill') {\n          _this.changeBinRed('landfillbin');\n\n          _this.changeBinRed('compostbin');\n\n          _this.changeBinRed('recyclingbin');\n        }\n      }\n      /*console.log(\"x: \" + data.x);\n      console.log(\"y: \" + data.y); */\n\n\n      _this.props.setOverlapsBin();\n    };\n\n    _this.handleDrag = function (e, data) {\n      var x = data.x,\n          y = data.y;\n\n      _this.setState({\n        position: {\n          x: x,\n          y: y\n        }\n      });\n\n      _this.changeBinWhite('landfillbin');\n\n      _this.changeBinWhite('compostbin');\n\n      _this.changeBinWhite('recyclingbin');\n    };\n\n    _this.eventLogger = function (e, data) {\n      console.log('Event: ', e);\n      console.log('Data', data);\n    };\n\n    _this.getImage = function () {\n      // let x = this.props.itemtype;\n      return require(\"./itemimages/\".concat(_this.props.itemtype, \".jpg\")); // if (x === 'PlasticCup')\n      //   return PlasticCup;\n      // else if (x === 'Burger')\n      //   return Burger;\n      // else if (x === 'Pencil')\n      //   return Pencil;\n      // else if (x === 'ScratchPaper')\n      //   return ScratchPaper;\n      // else if (x === 'Flyer')\n      //   return Flyer;\n      // else if (x === 'SodaCan')\n      //   return SodaCan;\n      // else if (x === 'Pizza')\n      //   return Pizza;\n      // else if (x === 'PopcornBox')\n      //   return PopcornBox;\n      // else if (x === 'Napkin')\n      //   return Napkin;\n      // else if (x === 'RubberBand')\n      //   return RubberBand;\n      // else if (x === 'Styrofoam')\n      //   return Styrofoam;\n      // else if (x === 'Flower')\n      //   return Flower;\n      // else if (x === 'Newspaper')\n      //   return Newspaper;\n      // else if (x === 'Floss')\n      //   return Floss;\n      // else if (x == 'ChipBag')\n      //   return ChipBag;\n    };\n\n    _this.state = {\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"changeBinColor\",\n    value: function changeBinColor(binID, color) {\n      document.getElementById(binID).style.borderColor = color;\n    }\n  }, {\n    key: \"changeBinGreen\",\n    value: function changeBinGreen(binID) {\n      document.getElementById(binID).style.borderColor = 'green';\n    }\n  }, {\n    key: \"changeBinRed\",\n    value: function changeBinRed(binID) {\n      document.getElementById(binID).style.borderColor = 'red';\n    }\n  }, {\n    key: \"changeBinWhite\",\n    value: function changeBinWhite(binID) {\n      document.getElementById(binID).style.borderColor = 'white';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var image = this.getImage();\n      return React.createElement(Draggable, {\n        axis: \"both\",\n        handle: \".item\",\n        defaultPosition: null,\n        position: this.state.position,\n        scale: 1,\n        onStart: this.handleStart,\n        onDrag: this.handleDrag,\n        onStop: this.handleStop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item\",\n        id: \"item\".concat(this.props.itemnumber),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.props.itemtype), React.createElement(\"img\", {\n        className: \"pic\",\n        draggable: \"false\",\n        src: image,\n        alt: this.props.itemtype,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default Item;","map":{"version":3,"sources":["/Users/Andrew/Documents/programming/sustainla-master/src/Item.js"],"names":["React","Component","Draggable","Item","props","handleStop","e","data","incNumTries","bin","itemnumber","rect1","document","getElementById","getBoundingClientRect","rect2","right","left","top","bottom","incSucTries","changeBinGreen","changeBinWhite","changeBinRed","setOverlapsBin","handleDrag","x","y","setState","position","eventLogger","console","log","getImage","require","itemtype","state","binID","color","style","borderColor","image","handleStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n// import PlasticCup from './itemimages/PlasticCup.jpg';\n// import Burger from './itemimages/Burger.jpg';\n// import Pencil from './itemimages/Pencil.jpg';\n// import ScratchPaper from './itemimages/ScratchPaper.jpg';\n// import Flyer from './itemimages/Flyer.jpg';\n// import SodaCan from './itemimages/SodaCan.jpg';\n// import Pizza from './itemimages/Pizza.jpg';\n// import Napkin from './itemimages/Napkin.jpg';\n// import PopcornBox from './itemimages/PopcornBox.jpg';\n// import RubberBand from './itemimages/RubberBand.jpg';\n// import Styrofoam from './itemimages/Styrofoam.jpg';\n// import Floss from './itemimages/Floss.jpg';\n// import Newspaper from './itemimages/Newspaper.jpg';\n// import Flower from './itemimages/Flower.jpg';\n// import ChipBag from './itemimages/ChipBag.jpg';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: {\n        x: 0, y: 0\n      },\n    };\n  }\n\n  changeBinColor(binID, color) {\n    document.getElementById(binID).style.borderColor = color;\n  }\n\n  changeBinGreen(binID) {\n    document.getElementById(binID).style.borderColor = 'green';\n  }\n  changeBinRed(binID) {\n    document.getElementById(binID).style.borderColor = 'red';\n  }\n  changeBinWhite(binID) {\n    document.getElementById(binID).style.borderColor = 'white';\n  }\n\n  handleStop = (e, data) => {\n    this.props.incNumTries();\n    let bin;\n    if (this.props.bin === 'recycling') {\n      bin = 'recyclingbin';\n    }\n    else if (this.props.bin === 'compost') {\n      bin = 'compostbin'\n    }\n    else if (this.props.bin === 'landfill') {\n      bin = 'landfillbin'\n    }\n    let itemnumber = 'item' + this.props.itemnumber;\n    let rect1 = document.getElementById(itemnumber).getBoundingClientRect();\n    let rect2 = document.getElementById(bin).getBoundingClientRect();\n    if (rect1.right > rect2.left && rect2.top < rect1.bottom && rect1.bottom > rect2.top && rect1.left < rect2.right) {\n      this.props.incSucTries();\n      if (this.props.bin === 'recycling') {\n        this.changeBinGreen('recyclingbin');\n        this.changeBinWhite('compostbin');\n        this.changeBinWhite('landfillbin');\n      }\n      else if (this.props.bin === 'compost') {\n        this.changeBinGreen('compostbin');\n        this.changeBinWhite('recyclingbin');\n        this.changeBinWhite('landfillbin');\n      }\n      else if (this.props.bin === 'landfill') {\n        this.changeBinGreen('landfillbin');\n        this.changeBinWhite('compostbin');\n        this.changeBinWhite('recyclingbin');\n      }\n    }\n    else {\n      if (this.props.bin === 'recycling') {\n        this.changeBinRed('recyclingbin');\n        this.changeBinRed('compostbin');\n        this.changeBinRed('landfillbin');\n      }\n      else if (this.props.bin === 'compost') {\n        this.changeBinRed('compostbin');\n        this.changeBinRed('recyclingbin');\n        this.changeBinRed('landfillbin');\n      }\n      else if (this.props.bin === 'landfill') {\n        this.changeBinRed('landfillbin');\n        this.changeBinRed('compostbin');\n        this.changeBinRed('recyclingbin');\n      }\n    }\n    /*console.log(\"x: \" + data.x);\nconsole.log(\"y: \" + data.y); */\n    this.props.setOverlapsBin();\n  }\n  handleDrag = (e, data) => {\n    const { x, y } = data;\n    this.setState({\n      position: { x: x, y: y }\n    });\n    this.changeBinWhite('landfillbin');\n    this.changeBinWhite('compostbin');\n    this.changeBinWhite('recyclingbin');\n  }\n\n  eventLogger = (e: MouseEvent, data: Object) => {\n    console.log('Event: ', e);\n    console.log('Data', data);\n  }\n\n  getImage = () => {\n    // let x = this.props.itemtype;\n    return require(`./itemimages/${this.props.itemtype}.jpg`);\n    // if (x === 'PlasticCup')\n    //   return PlasticCup;\n    // else if (x === 'Burger')\n    //   return Burger;\n    // else if (x === 'Pencil')\n    //   return Pencil;\n    // else if (x === 'ScratchPaper')\n    //   return ScratchPaper;\n    // else if (x === 'Flyer')\n    //   return Flyer;\n    // else if (x === 'SodaCan')\n    //   return SodaCan;\n    // else if (x === 'Pizza')\n    //   return Pizza;\n    // else if (x === 'PopcornBox')\n    //   return PopcornBox;\n    // else if (x === 'Napkin')\n    //   return Napkin;\n    // else if (x === 'RubberBand')\n    //   return RubberBand;\n    // else if (x === 'Styrofoam')\n    //   return Styrofoam;\n    // else if (x === 'Flower')\n    //   return Flower;\n    // else if (x === 'Newspaper')\n    //   return Newspaper;\n    // else if (x === 'Floss')\n    //   return Floss;\n    // else if (x == 'ChipBag')\n    //   return ChipBag;\n  }\n  render() {\n    let image = this.getImage();\n\n    return (\n      <Draggable\n        axis=\"both\"\n        handle=\".item\"\n        defaultPosition={null}\n        position={this.state.position}\n        scale={1}\n        onStart={this.handleStart}\n        onDrag={this.handleDrag}\n        onStop={this.handleStop}>\n        <div className=\"item\" id={`item${this.props.itemnumber}`}>\n          <p>{this.props.itemtype}</p>\n          <img className=\"pic\" draggable=\"false\" src={image} alt={this.props.itemtype} />\n        </div>\n      </Draggable>\n    );\n  }\n}\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}