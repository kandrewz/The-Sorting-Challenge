{"ast":null,"code":"var _jsxFileName = \"/Users/Andrew/Downloads/sustainla-master/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bin from './Bin';\nimport Item from './Item';\nimport * as serviceWorker from './serviceWorker';\n\nfunction dw_getPageOffsets(el) {\n  var sOff = dw_getScrollOffsets(),\n      left = 0,\n      top = 0,\n      props;\n\n  if (el.getBoundingClientRect) {\n    props = el.getBoundingClientRect();\n    left = props.left + sOff.x;\n    top = props.top + sOff.y;\n  } else {\n    // for older browsers\n    do {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n    } while (el = el.offsetParent);\n  }\n\n  return {\n    x: Math.round(left),\n    y: Math.round(top)\n  };\n}\n\nfunction dw_getScrollOffsets() {\n  var doc = document,\n      w = window;\n  var x, y, docEl;\n\n  if (typeof w.pageYOffset === 'number') {\n    x = w.pageXOffset;\n    y = w.pageYOffset;\n  } else {\n    docEl = doc.compatMode && doc.compatMode === 'CSS1Compat' ? doc.documentElement : doc.body;\n    x = docEl.scrollLeft;\n    y = docEl.scrollTop;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nReactDOM.render(React.createElement(Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.getElementById('root'));\nReactDOM.render(React.createElement(Bin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), document.getElementById('bin1'));\nReactDOM.render(React.createElement(Bin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), document.getElementById('bin2'));\nReactDOM.render(React.createElement(Bin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), document.getElementById('bin3')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/Andrew/Downloads/sustainla-master/src/index.js"],"names":["React","ReactDOM","App","Bin","Item","serviceWorker","dw_getPageOffsets","el","sOff","dw_getScrollOffsets","left","top","props","getBoundingClientRect","x","y","offsetLeft","offsetTop","offsetParent","Math","round","doc","document","w","window","docEl","pageYOffset","pageXOffset","compatMode","documentElement","body","scrollLeft","scrollTop","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC3B,MAAIC,IAAI,GAAGC,mBAAmB,EAA9B;AAAA,MAAkCC,IAAI,GAAG,CAAzC;AAAA,MAA4CC,GAAG,GAAG,CAAlD;AAAA,MAAqDC,KAArD;;AAEA,MAAKL,EAAE,CAACM,qBAAR,EAAgC;AAC5BD,IAAAA,KAAK,GAAGL,EAAE,CAACM,qBAAH,EAAR;AACAH,IAAAA,IAAI,GAAGE,KAAK,CAACF,IAAN,GAAaF,IAAI,CAACM,CAAzB;AACAH,IAAAA,GAAG,GAAGC,KAAK,CAACD,GAAN,GAAYH,IAAI,CAACO,CAAvB;AACH,GAJD,MAIO;AAAE;AACL,OAAG;AACCL,MAAAA,IAAI,IAAIH,EAAE,CAACS,UAAX;AACAL,MAAAA,GAAG,IAAIJ,EAAE,CAACU,SAAV;AACH,KAHD,QAGWV,EAAE,GAAGA,EAAE,CAACW,YAHnB;AAIH;;AACD,SAAO;AAAEJ,IAAAA,CAAC,EAAEK,IAAI,CAACC,KAAL,CAAWV,IAAX,CAAL;AAAuBK,IAAAA,CAAC,EAAEI,IAAI,CAACC,KAAL,CAAWT,GAAX;AAA1B,GAAP;AACH;;AAED,SAASF,mBAAT,GAA+B;AAC3B,MAAIY,GAAG,GAAGC,QAAV;AAAA,MAAoBC,CAAC,GAAGC,MAAxB;AACA,MAAIV,CAAJ,EAAOC,CAAP,EAAUU,KAAV;;AAEA,MAAK,OAAOF,CAAC,CAACG,WAAT,KAAyB,QAA9B,EAAyC;AACrCZ,IAAAA,CAAC,GAAGS,CAAC,CAACI,WAAN;AACAZ,IAAAA,CAAC,GAAGQ,CAAC,CAACG,WAAN;AACH,GAHD,MAGO;AACHD,IAAAA,KAAK,GAAIJ,GAAG,CAACO,UAAJ,IAAkBP,GAAG,CAACO,UAAJ,KAAmB,YAAtC,GACAP,GAAG,CAACQ,eADJ,GACqBR,GAAG,CAACS,IADjC;AAEAhB,IAAAA,CAAC,GAAGW,KAAK,CAACM,UAAV;AACAhB,IAAAA,CAAC,GAAGU,KAAK,CAACO,SAAV;AACH;;AACD,SAAO;AAAClB,IAAAA,CAAC,EAACA,CAAH;AAAMC,IAAAA,CAAC,EAACA;AAAR,GAAP;AACH;;AAEDd,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAA1B;AACAjC,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAAzB;AACAjC,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAAzB;AACAjC,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAAzB,E,CACA;AACA;AACA;;AACA7B,aAAa,CAAC8B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bin from './Bin';\nimport Item from './Item';\nimport * as serviceWorker from './serviceWorker';\n\nfunction dw_getPageOffsets(el) {\n    var sOff = dw_getScrollOffsets(), left = 0, top = 0, props;\n    \n    if ( el.getBoundingClientRect ) {\n        props = el.getBoundingClientRect();\n        left = props.left + sOff.x;\n        top = props.top + sOff.y;\n    } else { // for older browsers\n        do {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n        } while ( (el = el.offsetParent) );\n    }\n    return { x: Math.round(left), y: Math.round(top) };\n}\n\nfunction dw_getScrollOffsets() {\n    var doc = document, w = window;\n    var x, y, docEl;\n    \n    if ( typeof w.pageYOffset === 'number' ) {\n        x = w.pageXOffset;\n        y = w.pageYOffset;\n    } else {\n        docEl = (doc.compatMode && doc.compatMode === 'CSS1Compat')?\n                doc.documentElement: doc.body;\n        x = docEl.scrollLeft;\n        y = docEl.scrollTop;\n    }\n    return {x:x, y:y};\n}\n\nReactDOM.render(<Item />, document.getElementById('root'));\nReactDOM.render(<Bin />, document.getElementById('bin1'));\nReactDOM.render(<Bin />, document.getElementById('bin2'));\nReactDOM.render(<Bin />, document.getElementById('bin3'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}