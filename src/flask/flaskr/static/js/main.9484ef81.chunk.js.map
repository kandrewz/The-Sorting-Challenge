{"version":3,"sources":["itemimages sync /^/.//.*/.png$","itemimages/Burger.png","itemimages/ChipBag.png","itemimages/Flyer.png","itemimages/Napkin.png","itemimages/Pencil.png","itemimages/Pizza.png","itemimages/PlasticCup.png","itemimages/PopcornBox.png","itemimages/RubberBand.png","itemimages/ScratchPaper.png","itemimages/SodaCan.png","itemimages/Styrofoam.png","Item.js","ItemParent.js","serviceWorker.js","index.js"],"names":["map","./Burger.png","./ChipBag.png","./Flyer.png","./Napkin.png","./Pencil.png","./Pizza.png","./PlasticCup.png","./PopcornBox.png","./RubberBand.png","./ScratchPaper.png","./SodaCan.png","./Styrofoam.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Item","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStop","data","overlapsAnyBin","incNumTries","itemnumber","bin","concat","itemRect","document","getElementById","getBoundingClientRect","binRect","right","left","top","bottom","incSucTries","changeBinColor","setOverlapsBin","handleDrag","x","y","setState","position","getImage","require","itemtype","state","overlapsBin","binID","color","style","borderColor","compostRect","recyclingRect","landfillRect","item","image","react_default","a","createElement","react_draggable_default","axis","handle","defaultPosition","scale","onStart","handleStart","onDrag","onStop","className","draggable","src","alt","Component","ItemParent","numTries","sucTries","currentItemNum","itemNumTries","itemNum","array","finishMessage","_this2","items","v","i","src_Item","bind","console","log","fetch","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","body","JSON","stringify","itemNumTries0","itemNumTries1","itemNumTries2","itemNumTries3","itemNumTries4","itemNumTries5","itemNumTries6","itemNumTries7","itemNumTries8","itemNumTries9","itemNumTries10","itemNumTries11","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","src_ItemParent","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9484ef81.chunk.js","sourcesContent":["var map = {\n\t\"./Burger.png\": 24,\n\t\"./ChipBag.png\": 25,\n\t\"./Flyer.png\": 26,\n\t\"./Napkin.png\": 27,\n\t\"./Pencil.png\": 28,\n\t\"./Pizza.png\": 29,\n\t\"./PlasticCup.png\": 30,\n\t\"./PopcornBox.png\": 31,\n\t\"./RubberBand.png\": 32,\n\t\"./ScratchPaper.png\": 33,\n\t\"./SodaCan.png\": 34,\n\t\"./Styrofoam.png\": 35\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/Burger.29713919.png\";","module.exports = __webpack_public_path__ + \"static/media/ChipBag.3d009c0c.png\";","module.exports = __webpack_public_path__ + \"static/media/Flyer.cf9c3d2e.png\";","module.exports = __webpack_public_path__ + \"static/media/Napkin.e2b70853.png\";","module.exports = __webpack_public_path__ + \"static/media/Pencil.2b14e2bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Pizza.8df9d4a5.png\";","module.exports = __webpack_public_path__ + \"static/media/PlasticCup.2b8de513.png\";","module.exports = __webpack_public_path__ + \"static/media/PopcornBox.8d927431.png\";","module.exports = __webpack_public_path__ + \"static/media/RubberBand.79bac79d.png\";","module.exports = __webpack_public_path__ + \"static/media/ScratchPaper.3989d15f.png\";","module.exports = __webpack_public_path__ + \"static/media/SodaCan.a27d6504.png\";","module.exports = __webpack_public_path__ + \"static/media/Styrofoam.ee29fa17.png\";","import React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: {\n        x: 0,\n        y: 0\n      },\n      overlapsBin: false\n    };\n  }\n\n  changeBinColor(binID, color) {\n    document.getElementById(binID).style.borderColor = color;\n  }\n  setOverlapsBin() {\n    this.setState({ overlapsBin: true });\n  }\n\n  overlapsAnyBin() {\n    let itemnumber = `item${this.props.itemnumber}`;\n    let itemRect = document.getElementById(itemnumber).getBoundingClientRect();\n    let compostRect = document\n      .getElementById(\"compostbin\")\n      .getBoundingClientRect();\n    if (\n      itemRect.right > compostRect.left &&\n      itemRect.top < compostRect.bottom &&\n      itemRect.bottom > compostRect.top &&\n      itemRect.left < compostRect.right\n    ) {\n      return true;\n    }\n    let recyclingRect = document\n      .getElementById(\"recyclingbin\")\n      .getBoundingClientRect();\n    if (\n      itemRect.right > recyclingRect.left &&\n      itemRect.top < recyclingRect.bottom &&\n      itemRect.bottom > recyclingRect.top &&\n      itemRect.left < recyclingRect.right\n    ) {\n      return true;\n    }\n    let landfillRect = document\n      .getElementById(\"landfillbin\")\n      .getBoundingClientRect();\n    if (\n      itemRect.right > landfillRect.left &&\n      itemRect.top < landfillRect.bottom &&\n      itemRect.bottom > landfillRect.top &&\n      itemRect.left < landfillRect.right\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n  handleStop = (e, data) => {\n    if (this.overlapsAnyBin()) {\n      this.props.incNumTries(this.props.itemnumber);\n      let bin = `${this.props.bin}bin`;\n      let itemnumber = `item${this.props.itemnumber}`;\n      let itemRect = document\n        .getElementById(itemnumber)\n        .getBoundingClientRect();\n      let binRect = document.getElementById(bin).getBoundingClientRect();\n      if (\n        itemRect.right > binRect.left &&\n        itemRect.top < binRect.bottom &&\n        itemRect.bottom > binRect.top &&\n        itemRect.left < binRect.right\n      ) {\n        this.props.incSucTries();\n        if (this.props.bin === \"recycling\") {\n          this.changeBinColor(\"recyclingbin\", \"green\");\n          this.changeBinColor(\"compostbin\", \"transparent\");\n          this.changeBinColor(\"landfillbin\", \"transparent\");\n        } else if (this.props.bin === \"compost\") {\n          this.changeBinColor(\"compostbin\", \"green\");\n          this.changeBinColor(\"recyclingbin\", \"transparent\");\n          this.changeBinColor(\"landfillbin\", \"transparent\");\n        } else if (this.props.bin === \"landfill\") {\n          this.changeBinColor(\"landfillbin\", \"green\");\n          this.changeBinColor(\"compostbin\", \"transparent\");\n          this.changeBinColor(\"recyclingbin\", \"transparent\");\n        }\n        this.setOverlapsBin();\n      } else {\n        this.changeBinColor(\"landfillbin\", \"red\");\n        this.changeBinColor(\"compostbin\", \"red\");\n        this.changeBinColor(\"recyclingbin\", \"red\");\n      }\n    }\n    /*console.log(\"x: \" + data.x);\nconsole.log(\"y: \" + data.y); */\n  };\n  handleDrag = (e, data) => {\n    const { x, y } = data;\n    this.setState({\n      position: { x: x, y: y }\n    });\n    this.changeBinColor(\"landfillbin\", \"transparent\");\n    this.changeBinColor(\"compostbin\", \"transparent\");\n    this.changeBinColor(\"recyclingbin\", \"transparent\");\n  };\n\n  getImage = () => {\n    // let x = this.props.itemtype;\n    return require(`./itemimages/${this.props.itemtype}.png`);\n  };\n\n  render() {\n    let image = this.getImage();\n    let item;\n    if (this.state.overlapsBin === false) {\n      item = (\n        <Draggable\n          axis=\"both\"\n          handle=\".item\"\n          defaultPosition={null}\n          position={this.state.position}\n          scale={1}\n          onStart={this.handleStart}\n          onDrag={this.handleDrag}\n          onStop={this.handleStop}\n        >\n          <div className=\"item\" id={`item${this.props.itemnumber}`}>\n            <p>{this.props.itemtype}</p>\n            <img\n              className=\"pic\"\n              draggable=\"false\"\n              src={image}\n              alt={this.props.itemtype}\n            />\n          </div>\n        </Draggable>\n      );\n    }\n    return <div>{item}</div>;\n  }\n}\nexport default Item;\n","import \"./index.css\";\nimport React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport axios from \"axios\";\n\nclass ItemParent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numTries: 0,\n      sucTries: 0,\n      currentItemNum: 12,\n      itemNumTries: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n  }\n\n  incNumTries(itemNum) {\n    let array = this.state.itemNumTries;\n    array[itemNum] += 1;\n    this.setState({ numTries: this.state.numTries + 1 });\n    this.setState({ itemNumTries: array });\n    this.setState({ currentItemNum: itemNum });\n  }\n\n  incSucTries() {\n    this.setState({ sucTries: this.state.sucTries + 1 });\n    this.setState({ currentItemNum: 12 });\n  }\n\n  render() {\n    const itemData = [\n      [\"recycling\", \"PlasticCup\"],\n      [\"compost\", \"Burger\"],\n      [\"landfill\", \"Pencil\"],\n      [\"recycling\", \"ScratchPaper\"],\n      [\"recycling\", \"SodaCan\"],\n      [\"compost\", \"Pizza\"],\n      [\"recycling\", \"Flyer\"],\n      [\"landfill\", \"Styrofoam\"],\n      [\"compost\", \"PopcornBox\"],\n      [\"compost\", \"Napkin\"],\n      [\"landfill\", \"RubberBand\"],\n      [\"landfill\", \"ChipBag\"]\n    ];\n    const items = itemData.map((v, i) => (\n      <Item\n        incNumTries={this.incNumTries.bind(this)}\n        incSucTries={this.incSucTries.bind(this)}\n        bin={v[0]}\n        itemnumber={i}\n        itemtype={v[1]}\n      />\n    ));\n    let finishMessage;\n    if (this.state.sucTries === 12) {\n      /*let obj = {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      obj[\"numTries\"] = this.state.numTries;\n      for (let i = 0; i < 12; i++) {\n        obj[\"itemNumTries\" + i] = this.state.itemNumTries[i];\n      } */\n      console.log(this.state.numTries);\n      /*axios\n        .post(\n          \"http://localhost:5000/runs\",\n          JSON.stringify({\n            numTries: this.state.numTries,\n            itemNumTries0: this.state.itemNumTries[0],\n            itemNumTries1: this.state.itemNumTries[1],\n            itemNumTries2: this.state.itemNumTries[2],\n            itemNumTries3: this.state.itemNumTries[3],\n            itemNumTries4: this.state.itemNumTries[4],\n            itemNumTries5: this.state.itemNumTries[5],\n            itemNumTries6: this.state.itemNumTries[6],\n            itemNumTries7: this.state.itemNumTries[7],\n            itemNumTries8: this.state.itemNumTries[8],\n            itemNumTries9: this.state.itemNumTries[9],\n            itemNumTries10: this.state.itemNumTries[10],\n            itemNumTries11: this.state.itemNumTries[11]\n          })\n        )\n        .then(res => {\n          console.log(res);\n        });\n      axios.get(\"http://localhost:5000/runs\").then(function(response) {\n        console.log(\"response: \" + response);\n      }); */\n      fetch(\"http://localhost:5000/runs\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"appplication/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({\n          numTries: this.state.numTries,\n          itemNumTries0: this.state.itemNumTries[0],\n          itemNumTries1: this.state.itemNumTries[1],\n          itemNumTries2: this.state.itemNumTries[2],\n          itemNumTries3: this.state.itemNumTries[3],\n          itemNumTries4: this.state.itemNumTries[4],\n          itemNumTries5: this.state.itemNumTries[5],\n          itemNumTries6: this.state.itemNumTries[6],\n          itemNumTries7: this.state.itemNumTries[7],\n          itemNumTries8: this.state.itemNumTries[8],\n          itemNumTries9: this.state.itemNumTries[9],\n          itemNumTries10: this.state.itemNumTries[10],\n          itemNumTries11: this.state.itemNumTries[11]\n        })\n      });\n      finishMessage = (\n        <>\n          <h1 className=\"score\">\n            Congrats! Here are some stats: database stuff here\n          </h1>\n          <h1 className=\"score\">\n            put their numTries and itemNumTries arr using map here\n          </h1>\n          <h1 className=\"score\">Average Total Tries: </h1>\n          <h1 className=\"score\">Average Tries per Item: </h1>\n        </>\n      );\n    }\n    return (\n      <div>\n        <h1 className=\"score\">Total Score: {this.state.sucTries} / 12</h1>\n        <h1 className=\"score\">Total Tries: {this.state.numTries}</h1>\n        <h1 className=\"score\">\n          Tries for Current Item:{\" \"}\n          {this.state.itemNumTries[this.state.currentItemNum]}\n        </h1>\n        {items}\n        <div>{finishMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default ItemParent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport ItemParent from \"./ItemParent\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<ItemParent />, document.getElementById(\"item-container\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}